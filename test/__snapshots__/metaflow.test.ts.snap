// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`vpc matches cfn output 1`] = `
Object {
  "Outputs": Object {
    "vpcresourcesapixrayTracerAPIEndpointD1865AF8": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
            },
            ".execute-api.us-west-2.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "vpcresourcesapixrayTracerAPIDeploymentStageapi78B30285",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363ArtifactHashC8CABE1D": Object {
      "Description": "Artifact hash for asset \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3Bucket6995F9C9": Object {
      "Description": "S3 bucket for asset \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823": Object {
      "Description": "S3 key for asset version \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "vpcresourcesapiapikey5BFB2DBE": Object {
      "Properties": Object {
        "Enabled": true,
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-apiKey",
            ],
          ],
        },
        "StageKeys": Array [
          Object {
            "RestApiId": Object {
              "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
            },
            "StageName": Object {
              "Ref": "vpcresourcesapixrayTracerAPIDeploymentStageapi78B30285",
            },
          },
        ],
      },
      "Type": "AWS::ApiGateway::ApiKey",
    },
    "vpcresourcesapiapilogs4B15914F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-api",
            ],
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "vpcresourcesapidbmigratehandlerD11560DD": Object {
      "DependsOn": Array [
        "vpcresourceslambdaecsexecutionroleDefaultPolicy6BD66225",
        "vpcresourceslambdaecsexecutionroleB58119A5",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3Bucket6995F9C9",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "MD_LB_ADDRESS": "placeholder",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "vpcresourceslambdaecsexecutionroleB58119A5",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "vpcresourcesvpc14EAEEFF",
                "DefaultSecurityGroup",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "vpcresourcesvpcPublicSubnet1Subnet1777CDC4",
            },
            Object {
              "Ref": "vpcresourcesvpcPublicSubnet2Subnet15B1DE5D",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "vpcresourcesapixrayTracerAPIAA69E640": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "xrayTracerAPI",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "vpcresourcesapixrayTracerAPIAccount044558D4": Object {
      "DependsOn": Array [
        "vpcresourcesapixrayTracerAPIAA69E640",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "vpcresourcesapixrayTracerAPICloudWatchRoleE0ADC1DB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "vpcresourcesapixrayTracerAPICloudWatchRoleE0ADC1DB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "vpcresourcesapixrayTracerAPIDeployment5EBF4EFDbdbec950728aec604500b5b37917e02f": Object {
      "DependsOn": Array [
        "vpcresourcesapixrayTracerAPIdbschemastatusGET3830C2D1",
        "vpcresourcesapixrayTracerAPIdbschemastatusBD8BD345",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "vpcresourcesapixrayTracerAPIDeploymentStageapi78B30285": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "vpcresourcesapiapilogs4B15914F",
              "Arn",
            ],
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \\"$context.httpMethod $context.resourcePath $context.protocol\\" $context.status $context.responseLength $context.requestId",
        },
        "DeploymentId": Object {
          "Ref": "vpcresourcesapixrayTracerAPIDeployment5EBF4EFDbdbec950728aec604500b5b37917e02f",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
        },
        "StageName": "api",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "vpcresourcesapixrayTracerAPIdbschemastatusBD8BD345": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "vpcresourcesapixrayTracerAPIAA69E640",
            "RootResourceId",
          ],
        },
        "PathPart": "db_schema_status",
        "RestApiId": Object {
          "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "vpcresourcesapixrayTracerAPIdbschemastatusGET3830C2D1": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "vpcresourcesapidbmigratehandlerD11560DD",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "vpcresourcesapixrayTracerAPIdbschemastatusBD8BD345",
        },
        "RestApiId": Object {
          "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "vpcresourcesapixrayTracerAPIdbschemastatusGETApiPermissionTestTestvpcresourcesapixrayTracerAPIF56CBB6DGETdbschemastatus1C0E70DB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "vpcresourcesapidbmigratehandlerD11560DD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-west-2:123456789:",
              Object {
                "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
              },
              "/test-invoke-stage/GET/db_schema_status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "vpcresourcesapixrayTracerAPIdbschemastatusGETApiPermissionTestvpcresourcesapixrayTracerAPIF56CBB6DGETdbschemastatusBDD8F837": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "vpcresourcesapidbmigratehandlerD11560DD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-west-2:123456789:",
              Object {
                "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
              },
              "/",
              Object {
                "Ref": "vpcresourcesapixrayTracerAPIDeploymentStageapi78B30285",
              },
              "/GET/db_schema_status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "vpcresourcesbucket0B114C97": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "vpcresourcesbucketPolicy8DDF9B46": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "vpcresourcesbucket0B114C97",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "StringNotEquals": Object {
                  "s3:authType": "REST-HEADER",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    Object {
                      "Ref": "vpcresourcesbucket0B114C97",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "vpcresourcescatalogappprodusageplan8E9FBA5E": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "vpcresourcesapixrayTracerAPIAA69E640",
            },
            "Stage": Object {
              "Ref": "vpcresourcesapixrayTracerAPIDeploymentStageapi78B30285",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "vpcresourcescatalogappprodusageplanUsagePlanKeyResourceFECE0C4D": Object {
      "Properties": Object {
        "KeyId": Object {
          "Ref": "vpcresourcesapiapikey5BFB2DBE",
        },
        "KeyType": "API_KEY",
        "UsagePlanId": Object {
          "Ref": "vpcresourcescatalogappprodusageplan8E9FBA5E",
        },
      },
      "Type": "AWS::ApiGateway::UsagePlanKey",
    },
    "vpcresourcesdatabaseDBInstance2B7BA8E2": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AllocatedStorage": "100",
        "BackupRetentionPeriod": 7,
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t2.small",
        "DBParameterGroupName": "default.postgres12",
        "DBSubnetGroupName": Object {
          "Ref": "vpcresourcesdatabaseDBInstanceSubnetGroup6AFC541D",
        },
        "DeletionProtection": false,
        "Engine": "postgres",
        "EngineVersion": "12.4",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "vpcresourcesdatabasemetaflowrdssecret38B9B679",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "vpcresourcesdatabasemetaflowrdssecret38B9B679",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "vpcresourcesrdssg8F201A43",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "vpcresourcesdatabaseDBInstanceSubnetGroup6AFC541D": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for DBInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "vpcresourcesvpcPublicSubnet1Subnet1777CDC4",
          },
          Object {
            "Ref": "vpcresourcesvpcPublicSubnet2Subnet15B1DE5D",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "vpcresourcesdatabasemetaflowrdssecret38B9B679": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "This is a Secrets Manager secret for an RDS DB instance",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "IncludeSpace": false,
          "SecretStringTemplate": "{\\"username\\":\\"master\\"}",
        },
        "Name": "metaflow-rds-secret",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "vpcresourcesdatabasemetaflowrdssecretAttachment7CCB2D76": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "vpcresourcesdatabasemetaflowrdssecret38B9B679",
        },
        "TargetId": Object {
          "Ref": "vpcresourcesdatabaseDBInstance2B7BA8E2",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "vpcresourcesecsexecutionroleDC762D89": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "TestEcsExecutionRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "vpcresourcesecsexecutionroleDefaultPolicy65761754": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "vpcresourcesecsexecutionroleDefaultPolicy65761754",
        "Roles": Array [
          Object {
            "Ref": "vpcresourcesecsexecutionroleDC762D89",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "vpcresourcesecstaskrole7D6BB8A3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "RoleName": "Test-EcsTaskRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "vpcresourcesecstaskroleDefaultPolicyC62BC9F4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "vpcresourcesbucket0B114C97",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "vpcresourcesbucket0B114C97",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "vpcresourcesecstaskroleDefaultPolicyC62BC9F4",
        "Roles": Array [
          Object {
            "Ref": "vpcresourcesecstaskrole7D6BB8A3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "vpcresourcesfargatesg0D003221": Object {
      "Properties": Object {
        "GroupDescription": "Test/vpc-resources/fargate-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "vpcresourcesvpc14EAEEFF",
                "CidrBlock",
              ],
            },
            "Description": "Allow API Calls Internally",
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080,
          },
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "vpcresourcesvpc14EAEEFF",
                "CidrBlock",
              ],
            },
            "Description": "Allow API Calls Internally",
            "FromPort": 8082,
            "IpProtocol": "tcp",
            "ToPort": 8082,
          },
        ],
        "VpcId": Object {
          "Ref": "vpcresourcesvpc14EAEEFF",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "vpcresourcesfargatesgfromTestvpcresourcesfargatesgA384A938ALLTRAFFIC00E42B61": Object {
      "Properties": Object {
        "Description": "Internal Communication",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "vpcresourcesfargatesg0D003221",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "vpcresourcesfargatesg0D003221",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "vpcresourceslambdaecsexecutionroleB58119A5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "RoleName": "TestLambdaEcsExecuteRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "vpcresourceslambdaecsexecutionroleDefaultPolicy6BD66225": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "vpcresourceslambdaecsexecutionroleDefaultPolicy6BD66225",
        "Roles": Array [
          Object {
            "Ref": "vpcresourceslambdaecsexecutionroleB58119A5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "vpcresourcesrdssg8F201A43": Object {
      "Properties": Object {
        "GroupDescription": "Test/vpc-resources/rds-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "vpcresourcesvpc14EAEEFF",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "vpcresourcesrdssgfromTestvpcresourcesfargatesgA384A9385432E33ED2E8": Object {
      "Properties": Object {
        "Description": "from TestvpcresourcesfargatesgA384A938:5432",
        "FromPort": 5432,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "vpcresourcesrdssg8F201A43",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "vpcresourcesfargatesg0D003221",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "vpcresourcestable216DD2E5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pathspec",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pathspec",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TimeToLiveSpecification": Object {
          "AttributeName": "ttl",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "vpcresourcesvpc14EAEEFF": Object {
      "Properties": Object {
        "CidrBlock": "10.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/vpc-resources/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "vpcresourcesvpcIGW4B72B206": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/vpc-resources/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "vpcresourcesvpcPublicSubnet1DefaultRoute7472D51E": Object {
      "DependsOn": Array [
        "vpcresourcesvpcVPCGW327AF424",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "vpcresourcesvpcIGW4B72B206",
        },
        "RouteTableId": Object {
          "Ref": "vpcresourcesvpcPublicSubnet1RouteTableE91350F3",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "vpcresourcesvpcPublicSubnet1RouteTableAssociationE4EFA19F": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "vpcresourcesvpcPublicSubnet1RouteTableE91350F3",
        },
        "SubnetId": Object {
          "Ref": "vpcresourcesvpcPublicSubnet1Subnet1777CDC4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "vpcresourcesvpcPublicSubnet1RouteTableE91350F3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/vpc-resources/vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "vpcresourcesvpc14EAEEFF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "vpcresourcesvpcPublicSubnet1Subnet1777CDC4": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.20.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Test/vpc-resources/vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "vpcresourcesvpc14EAEEFF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "vpcresourcesvpcPublicSubnet2DefaultRoute2F532CC2": Object {
      "DependsOn": Array [
        "vpcresourcesvpcVPCGW327AF424",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "vpcresourcesvpcIGW4B72B206",
        },
        "RouteTableId": Object {
          "Ref": "vpcresourcesvpcPublicSubnet2RouteTable420A353C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "vpcresourcesvpcPublicSubnet2RouteTable420A353C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/vpc-resources/vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "vpcresourcesvpc14EAEEFF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "vpcresourcesvpcPublicSubnet2RouteTableAssociation445A0707": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "vpcresourcesvpcPublicSubnet2RouteTable420A353C",
        },
        "SubnetId": Object {
          "Ref": "vpcresourcesvpcPublicSubnet2Subnet15B1DE5D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "vpcresourcesvpcPublicSubnet2Subnet15B1DE5D": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.20.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Test/vpc-resources/vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "vpcresourcesvpc14EAEEFF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "vpcresourcesvpcVPCGW327AF424": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "vpcresourcesvpcIGW4B72B206",
        },
        "VpcId": Object {
          "Ref": "vpcresourcesvpc14EAEEFF",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;

exports[`vpc matches snapshot 1`] = `
Object {
  "Outputs": Object {
    "baseapixrayTracerAPIEndpoint2C2398D8": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "baseapixrayTracerAPICDBE34AB",
            },
            ".execute-api.us-west-2.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "baseapixrayTracerAPIDeploymentStageapi123E7F8E",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363ArtifactHashC8CABE1D": Object {
      "Description": "Artifact hash for asset \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3Bucket6995F9C9": Object {
      "Description": "S3 bucket for asset \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823": Object {
      "Description": "S3 key for asset version \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "baseapiapikey9272BCBA": Object {
      "Properties": Object {
        "Enabled": true,
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-apiKey",
            ],
          ],
        },
        "StageKeys": Array [
          Object {
            "RestApiId": Object {
              "Ref": "baseapixrayTracerAPICDBE34AB",
            },
            "StageName": Object {
              "Ref": "baseapixrayTracerAPIDeploymentStageapi123E7F8E",
            },
          },
        ],
      },
      "Type": "AWS::ApiGateway::ApiKey",
    },
    "baseapiapilogsC00A746A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-api",
            ],
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "baseapidbmigratehandler26E7811A": Object {
      "DependsOn": Array [
        "baselambdaecsexecutionroleDefaultPolicy9B6F5190",
        "baselambdaecsexecutionrole22629F41",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3Bucket6995F9C9",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "MD_LB_ADDRESS": "placeholder",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "baselambdaecsexecutionrole22629F41",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "basevpc395C82F1",
                "DefaultSecurityGroup",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "basevpcPublicSubnet1SubnetAEDFD2F3",
            },
            Object {
              "Ref": "basevpcPublicSubnet2SubnetA8B45E65",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "baseapixrayTracerAPIAccount61B5B663": Object {
      "DependsOn": Array [
        "baseapixrayTracerAPICDBE34AB",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "baseapixrayTracerAPICloudWatchRole2ABA264F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "baseapixrayTracerAPICDBE34AB": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "xrayTracerAPI",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "baseapixrayTracerAPICloudWatchRole2ABA264F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "baseapixrayTracerAPIDeployment56AEDB28ff1713cbe08985d2c07f754361ea250b": Object {
      "DependsOn": Array [
        "baseapixrayTracerAPIdbschemastatusGET38047196",
        "baseapixrayTracerAPIdbschemastatusD4E23E33",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "baseapixrayTracerAPICDBE34AB",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "baseapixrayTracerAPIDeploymentStageapi123E7F8E": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "baseapiapilogsC00A746A",
              "Arn",
            ],
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \\"$context.httpMethod $context.resourcePath $context.protocol\\" $context.status $context.responseLength $context.requestId",
        },
        "DeploymentId": Object {
          "Ref": "baseapixrayTracerAPIDeployment56AEDB28ff1713cbe08985d2c07f754361ea250b",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "baseapixrayTracerAPICDBE34AB",
        },
        "StageName": "api",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "baseapixrayTracerAPIdbschemastatusD4E23E33": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "baseapixrayTracerAPICDBE34AB",
            "RootResourceId",
          ],
        },
        "PathPart": "db_schema_status",
        "RestApiId": Object {
          "Ref": "baseapixrayTracerAPICDBE34AB",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "baseapixrayTracerAPIdbschemastatusGET38047196": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "baseapidbmigratehandler26E7811A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "baseapixrayTracerAPIdbschemastatusD4E23E33",
        },
        "RestApiId": Object {
          "Ref": "baseapixrayTracerAPICDBE34AB",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "baseapixrayTracerAPIdbschemastatusGETApiPermissionTestTestbaseapixrayTracerAPI998F6377GETdbschemastatus79BD8AC2": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "baseapidbmigratehandler26E7811A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-west-2:123456789:",
              Object {
                "Ref": "baseapixrayTracerAPICDBE34AB",
              },
              "/test-invoke-stage/GET/db_schema_status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "baseapixrayTracerAPIdbschemastatusGETApiPermissionTestbaseapixrayTracerAPI998F6377GETdbschemastatusC0058831": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "baseapidbmigratehandler26E7811A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-west-2:123456789:",
              Object {
                "Ref": "baseapixrayTracerAPICDBE34AB",
              },
              "/",
              Object {
                "Ref": "baseapixrayTracerAPIDeploymentStageapi123E7F8E",
              },
              "/GET/db_schema_status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "basebucket896CC8D5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "basebucketPolicy5A7A5190": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "basebucket896CC8D5",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "StringNotEquals": Object {
                  "s3:authType": "REST-HEADER",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    Object {
                      "Ref": "basebucket896CC8D5",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "basecatalogappprodusageplan1A43CFF5": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "baseapixrayTracerAPICDBE34AB",
            },
            "Stage": Object {
              "Ref": "baseapixrayTracerAPIDeploymentStageapi123E7F8E",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "basecatalogappprodusageplanUsagePlanKeyResourceA031F086": Object {
      "Properties": Object {
        "KeyId": Object {
          "Ref": "baseapiapikey9272BCBA",
        },
        "KeyType": "API_KEY",
        "UsagePlanId": Object {
          "Ref": "basecatalogappprodusageplan1A43CFF5",
        },
      },
      "Type": "AWS::ApiGateway::UsagePlanKey",
    },
    "basedatabaseDBInstance3FB2F292": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AllocatedStorage": "100",
        "BackupRetentionPeriod": 7,
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t2.small",
        "DBParameterGroupName": "default.postgres12",
        "DBSubnetGroupName": Object {
          "Ref": "basedatabaseDBInstanceSubnetGroup06C71CBC",
        },
        "DeletionProtection": false,
        "Engine": "postgres",
        "EngineVersion": "12.4",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "basedatabasemetaflowrdssecret0FBDD809",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "basedatabasemetaflowrdssecret0FBDD809",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "baserdssg8553A4F4",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "basedatabaseDBInstanceSubnetGroup06C71CBC": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for DBInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "basevpcPublicSubnet1SubnetAEDFD2F3",
          },
          Object {
            "Ref": "basevpcPublicSubnet2SubnetA8B45E65",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "basedatabasemetaflowrdssecret0FBDD809": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "This is a Secrets Manager secret for an RDS DB instance",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "IncludeSpace": false,
          "SecretStringTemplate": "{\\"username\\":\\"master\\"}",
        },
        "Name": "metaflow-rds-secret",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "basedatabasemetaflowrdssecretAttachment30B86948": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "basedatabasemetaflowrdssecret0FBDD809",
        },
        "TargetId": Object {
          "Ref": "basedatabaseDBInstance3FB2F292",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "baseecsexecutionrole1C93133C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "TestEcsExecutionRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "baseecsexecutionroleDefaultPolicy12C81BFE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "baseecsexecutionroleDefaultPolicy12C81BFE",
        "Roles": Array [
          Object {
            "Ref": "baseecsexecutionrole1C93133C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "baseecstaskroleDefaultPolicyBA603954": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "basebucket896CC8D5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "basebucket896CC8D5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "baseecstaskroleDefaultPolicyBA603954",
        "Roles": Array [
          Object {
            "Ref": "baseecstaskroleEF40CB21",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "baseecstaskroleEF40CB21": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "RoleName": "Test-EcsTaskRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "basefargatesgA0148482": Object {
      "Properties": Object {
        "GroupDescription": "Test/base/fargate-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "basevpc395C82F1",
                "CidrBlock",
              ],
            },
            "Description": "Allow API Calls Internally",
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080,
          },
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "basevpc395C82F1",
                "CidrBlock",
              ],
            },
            "Description": "Allow API Calls Internally",
            "FromPort": 8082,
            "IpProtocol": "tcp",
            "ToPort": 8082,
          },
        ],
        "VpcId": Object {
          "Ref": "basevpc395C82F1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "basefargatesgfromTestbasefargatesg2254BBE9ALLTRAFFIC83E36685": Object {
      "Properties": Object {
        "Description": "Internal Communication",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "basefargatesgA0148482",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "basefargatesgA0148482",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "baselambdaecsexecutionrole22629F41": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "RoleName": "TestLambdaEcsExecuteRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "baselambdaecsexecutionroleDefaultPolicy9B6F5190": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "baselambdaecsexecutionroleDefaultPolicy9B6F5190",
        "Roles": Array [
          Object {
            "Ref": "baselambdaecsexecutionrole22629F41",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "baserdssg8553A4F4": Object {
      "Properties": Object {
        "GroupDescription": "Test/base/rds-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "basevpc395C82F1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "baserdssgfromTestbasefargatesg2254BBE954322DAADBF6": Object {
      "Properties": Object {
        "Description": "from Testbasefargatesg2254BBE9:5432",
        "FromPort": 5432,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "baserdssg8553A4F4",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "basefargatesgA0148482",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "basetable8FB0C562": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pathspec",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pathspec",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TimeToLiveSpecification": Object {
          "AttributeName": "ttl",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "basevpc395C82F1": Object {
      "Properties": Object {
        "CidrBlock": "10.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/base/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "basevpcIGW4B6BCB5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/base/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "basevpcPublicSubnet1DefaultRouteA2DEFBFB": Object {
      "DependsOn": Array [
        "basevpcVPCGWB52E8319",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "basevpcIGW4B6BCB5E",
        },
        "RouteTableId": Object {
          "Ref": "basevpcPublicSubnet1RouteTable987EFA54",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "basevpcPublicSubnet1RouteTable987EFA54": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/base/vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "basevpc395C82F1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "basevpcPublicSubnet1RouteTableAssociation2E3C17BA": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "basevpcPublicSubnet1RouteTable987EFA54",
        },
        "SubnetId": Object {
          "Ref": "basevpcPublicSubnet1SubnetAEDFD2F3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "basevpcPublicSubnet1SubnetAEDFD2F3": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.20.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Test/base/vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "basevpc395C82F1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "basevpcPublicSubnet2DefaultRoute8BA2B278": Object {
      "DependsOn": Array [
        "basevpcVPCGWB52E8319",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "basevpcIGW4B6BCB5E",
        },
        "RouteTableId": Object {
          "Ref": "basevpcPublicSubnet2RouteTableE911ACFD",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "basevpcPublicSubnet2RouteTableAssociation9823C43D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "basevpcPublicSubnet2RouteTableE911ACFD",
        },
        "SubnetId": Object {
          "Ref": "basevpcPublicSubnet2SubnetA8B45E65",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "basevpcPublicSubnet2RouteTableE911ACFD": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/base/vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "basevpc395C82F1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "basevpcPublicSubnet2SubnetA8B45E65": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.20.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Test/base/vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "basevpc395C82F1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "basevpcVPCGWB52E8319": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "basevpcIGW4B6BCB5E",
        },
        "VpcId": Object {
          "Ref": "basevpc395C82F1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;
