// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`metaflow-integ-stack 1`] = `
Object {
  "Outputs": Object {
    "metaflowapiEndpointD0BA6A56": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "metaflowapi023AC989",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "metaflowapiDeploymentStageapiD6F930C6",
            },
            "/",
          ],
        ],
      },
    },
    "metaflowdashboarddashboardUri9170A045": Object {
      "Export": Object {
        "Name": "metaflowDashboard",
      },
      "Value": "https://console.aws.amazon.com/cloudwatch/home#dashboards:name=MetaflowDashboard",
    },
    "metaflowfargateserviceServiceLoadBalancerDNS3EB8BCB6": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "metaflowfargateserviceServiceLB15AFA232",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363ArtifactHashC8CABE1D": Object {
      "Description": "Artifact hash for asset \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3Bucket6995F9C9": Object {
      "Description": "S3 bucket for asset \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823": Object {
      "Description": "S3 key for asset version \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "gatewayLink66988216": Object {
      "Properties": Object {
        "Name": "apiGatewayECSLink",
        "TargetArns": Array [
          Object {
            "Ref": "metaflowfargateserviceServiceLB15AFA232",
          },
        ],
      },
      "Type": "AWS::ApiGateway::VpcLink",
    },
    "metaflowapi023AC989": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "metaflowapiAccount55C04C71": Object {
      "DependsOn": Array [
        "metaflowapi023AC989",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "metaflowapiCloudWatchRoleA520C37E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "metaflowapiCloudWatchRoleA520C37E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowapiDeploymentD0E28B00c58a73cf812fc593e727be1e182fa131": Object {
      "DependsOn": Array [
        "metaflowapiproxyANY8E04F1B1",
        "metaflowapiproxyF2A92517",
        "metaflowapidbschemastatusGET69627357",
        "metaflowapidbschemastatus077E4283",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "metaflowapi023AC989",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "metaflowapiDeploymentStageapiD6F930C6": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "metaflowapiapilogs4443C2B1",
              "Arn",
            ],
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \\"$context.httpMethod $context.resourcePath $context.protocol\\" $context.status $context.responseLength $context.requestId",
        },
        "DeploymentId": Object {
          "Ref": "metaflowapiDeploymentD0E28B00c58a73cf812fc593e727be1e182fa131",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "metaflowapi023AC989",
        },
        "StageName": "api",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "metaflowapiapilogs4443C2B1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-api",
            ],
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowapidbmigratehandler168BC7AA": Object {
      "DependsOn": Array [
        "metaflowlambdaecsexecutionroleDefaultPolicyE5237DF7",
        "metaflowlambdaecsexecutionroleB10ADD8A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3Bucket6995F9C9",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "Trigger DB Migration",
        "Environment": Object {
          "Variables": Object {
            "MD_LB_ADDRESS": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "http://",
                  Object {
                    "Fn::GetAtt": Array [
                      "metaflowfargateserviceServiceLB15AFA232",
                      "DNSName",
                    ],
                  },
                  ":8082",
                ],
              ],
            },
          },
        },
        "FunctionName": "migrate-db",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "metaflowlambdaecsexecutionroleB10ADD8A",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "metaflowvpcBBAABAF6",
                "DefaultSecurityGroup",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "metaflowvpcPublicSubnet1SubnetA193F830",
            },
            Object {
              "Ref": "metaflowvpcPublicSubnet2Subnet98001B3D",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "metaflowapidbschemastatus077E4283": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "metaflowapi023AC989",
            "RootResourceId",
          ],
        },
        "PathPart": "db_schema_status",
        "RestApiId": Object {
          "Ref": "metaflowapi023AC989",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "metaflowapidbschemastatusGET69627357": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ConnectionId": Object {
            "Ref": "gatewayLink66988216",
          },
          "ConnectionType": "VPC_LINK",
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "HTTP_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "http://",
                Object {
                  "Fn::GetAtt": Array [
                    "metaflowfargateserviceServiceLB15AFA232",
                    "DNSName",
                  ],
                },
                ":8082/db_schema_status",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "metaflowapidbschemastatus077E4283",
        },
        "RestApiId": Object {
          "Ref": "metaflowapi023AC989",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "metaflowapiproxyANY8E04F1B1": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "CacheKeyParameters": Array [
            "method.request.path.proxy",
          ],
          "ConnectionId": Object {
            "Ref": "gatewayLink66988216",
          },
          "ConnectionType": "VPC_LINK",
          "IntegrationHttpMethod": "ANY",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "HTTP_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "http://",
                Object {
                  "Fn::GetAtt": Array [
                    "metaflowfargateserviceServiceLB15AFA232",
                    "DNSName",
                  ],
                },
                "/{proxy}",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "metaflowapiproxyF2A92517",
        },
        "RestApiId": Object {
          "Ref": "metaflowapi023AC989",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "metaflowapiproxyF2A92517": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "metaflowapi023AC989",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "metaflowapi023AC989",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "metaflowbucket78CC888C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowbucketPolicy2EE154E6": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "metaflowbucket78CC888C",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "StringNotEquals": Object {
                  "s3:authType": "REST-HEADER",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    Object {
                      "Ref": "metaflowbucket78CC888C",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "metaflowdashboardDashboard3CF39818": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Metaflow S3 Artifacts\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/S3\\",\\"NumberOfObjects\\",\\"BucketName\\",\\"",
              Object {
                "Ref": "metaflowbucket78CC888C",
              },
              "\\",\\"StorageType\\",\\"AllStorageTypes\\",{\\"period\\":900,\\"stat\\":\\"Sum\\"}],[\\"AWS/S3\\",\\"BucketSizeBytes\\",\\"BucketName\\",\\"",
              Object {
                "Ref": "metaflowbucket78CC888C",
              },
              "\\",\\"StorageType\\",\\"StandardStorage\\",{\\"period\\":900,\\"stat\\":\\"Sum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0},\\"right\\":{\\"min\\":0}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":12,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Metadata Service\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/ECS\\",\\"CPUUtilization\\",\\"ClusterName\\",\\"",
              Object {
                "Ref": "metaflowmetaflowclusterB98B9F11",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "metaflowfargateserviceServiceA3343736",
                  "Name",
                ],
              },
              "\\"],[\\"AWS/ECS\\",\\"MemoryUtilization\\",\\"ClusterName\\",\\"",
              Object {
                "Ref": "metaflowmetaflowclusterB98B9F11",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "metaflowfargateserviceServiceA3343736",
                  "Name",
                ],
              },
              "\\",{\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{},\\"period\\":900}}]}",
            ],
          ],
        },
        "DashboardName": "MetaflowDashboard",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "metaflowdatabaseDBInstance227685BC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AllocatedStorage": "20",
        "BackupRetentionPeriod": 7,
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t2.small",
        "DBParameterGroupName": "default.postgres11",
        "DBSubnetGroupName": Object {
          "Ref": "metaflowdatabaseDBInstanceSubnetGroupE0E2AAC3",
        },
        "DeletionProtection": false,
        "Engine": "postgres",
        "EngineVersion": "11.5",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "metaflowdatabasemetaflowrdssecret6A9B657C",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "metaflowdatabasemetaflowrdssecret6A9B657C",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "metaflowrdssgB8D4A7BB",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowdatabaseDBInstanceSubnetGroupE0E2AAC3": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for DBInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "metaflowvpcPublicSubnet1SubnetA193F830",
          },
          Object {
            "Ref": "metaflowvpcPublicSubnet2Subnet98001B3D",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "metaflowdatabasemetaflowrdssecret6A9B657C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "This is a Secrets Manager secret for an RDS DB instance",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "IncludeSpace": false,
          "SecretStringTemplate": "{\\"username\\":\\"master\\"}",
        },
        "Name": "metaflow-rds-secret",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowdatabasemetaflowrdssecretAttachment571407D1": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "metaflowdatabasemetaflowrdssecret6A9B657C",
        },
        "TargetId": Object {
          "Ref": "metaflowdatabaseDBInstance227685BC",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "metaflowecsexecutionroleD3FB200A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "integ-ec2EcsExecutionRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowecsexecutionroleDefaultPolicy6F2C4940": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "metaflowecsloggroupEC292114",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowecsexecutionroleDefaultPolicy6F2C4940",
        "Roles": Array [
          Object {
            "Ref": "metaflowecsexecutionroleD3FB200A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowecsloggroupEC292114": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/ecs/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-metadata-service-v2",
            ],
          ],
        },
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowecstaskroleA7C0B7A2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "RoleName": "integ-ec2-EcsTaskRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowecstaskroleDefaultPolicy6DEED8E7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "metaflowbucket78CC888C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "metaflowbucket78CC888C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "metaflowecsloggroupEC292114",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ec2:AttachNetworkInterface",
                "ec2:CreateNetworkInterface",
                "ec2:CreateNetworkInterfacePermission",
                "ec2:DeleteNetworkInterface",
                "ec2:DeleteNetworkInterfacePermission",
                "ec2:Describe*",
                "ec2:DetachNetworkInterface",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:Describe*",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:RegisterTargets",
                "iam:PassRole",
                "logs:DescribeLogStreams",
                "logs:CreateLogGroup",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowecstaskroleDefaultPolicy6DEED8E7",
        "Roles": Array [
          Object {
            "Ref": "metaflowecstaskroleA7C0B7A2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowfargateserviceServiceA3343736": Object {
      "DependsOn": Array [
        "metaflowfargateserviceServiceLBPublicListenerECSGroup2516FDBF",
        "metaflowfargateserviceServiceLBPublicListener2FC3E33F",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "metaflowmetaflowclusterB98B9F11",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 75,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "metadata-service-v2",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "metaflowfargateserviceServiceLBPublicListenerECSGroup2516FDBF",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "metaflowfargateserviceServiceSecurityGroup8618F514",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "metaflowvpcPublicSubnet1SubnetA193F830",
              },
              Object {
                "Ref": "metaflowvpcPublicSubnet2Subnet98001B3D",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "metaflowfargateservicemetaflowfargatetaskdefinition0211B59D",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "metaflowfargateserviceServiceLB15AFA232": Object {
      "DependsOn": Array [
        "metaflowvpcPublicSubnet1DefaultRoute4B440EDF",
        "metaflowvpcPublicSubnet2DefaultRouteFCE91CE5",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "Subnets": Array [
          Object {
            "Ref": "metaflowvpcPublicSubnet1SubnetA193F830",
          },
          Object {
            "Ref": "metaflowvpcPublicSubnet2Subnet98001B3D",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "metaflowfargateserviceServiceLBPublicListener2FC3E33F": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "metaflowfargateserviceServiceLBPublicListenerECSGroup2516FDBF",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "metaflowfargateserviceServiceLB15AFA232",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "metaflowfargateserviceServiceLBPublicListenerECSGroup2516FDBF": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "TCP",
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "metaflowfargateserviceServiceLBdbmigratelistener03CF434F": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "metaflowfargateservicedbmigratetargetgroup749A629D",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "metaflowfargateserviceServiceLB15AFA232",
        },
        "Port": 8082,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "metaflowfargateserviceServiceLBnlblistenerC2181D44": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "metaflowfargateservicenlbtargetgroupBF36844D",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "metaflowfargateserviceServiceLB15AFA232",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "metaflowfargateserviceServiceSecurityGroup8618F514": Object {
      "Properties": Object {
        "GroupDescription": "integ-ec2/metaflow/fargate-service/Service/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "metaflowvpcBBAABAF6",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "metaflowvpcBBAABAF6",
                      "CidrBlock",
                    ],
                  },
                  ":8080",
                ],
              ],
            },
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080,
          },
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "metaflowvpcBBAABAF6",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "metaflowvpcBBAABAF6",
                      "CidrBlock",
                    ],
                  },
                  ":8082",
                ],
              ],
            },
            "FromPort": 8082,
            "IpProtocol": "tcp",
            "ToPort": 8082,
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "metaflowfargateserviceServiceSecurityGroupfromintegec2metaflowfargateserviceServiceSecurityGroup620135AFALLTRAFFIC5FF787C6": Object {
      "Properties": Object {
        "Description": "Internal Communication",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "metaflowfargateserviceServiceSecurityGroup8618F514",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "metaflowfargateserviceServiceSecurityGroup8618F514",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "metaflowfargateservicedbmigratetargetgroup749A629D": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPort": "8080",
        "HealthCheckProtocol": "TCP",
        "HealthCheckTimeoutSeconds": 10,
        "HealthyThresholdCount": 2,
        "Port": 8082,
        "Protocol": "TCP",
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "metaflowfargateservicemetaflowfargatetaskdefinition0211B59D": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "MF_METADATA_DB_HOST",
                "Value": Object {
                  "Fn::GetAtt": Array [
                    "metaflowdatabaseDBInstance227685BC",
                    "Endpoint.Address",
                  ],
                },
              },
              Object {
                "Name": "MF_METADATA_DB_PORT",
                "Value": Object {
                  "Fn::GetAtt": Array [
                    "metaflowdatabaseDBInstance227685BC",
                    "Endpoint.Port",
                  ],
                },
              },
              Object {
                "Name": "MF_METADATA_DB_USER",
                "Value": "master",
              },
              Object {
                "Name": "MF_METADATA_DB_PSWD",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{{resolve:secretsmanager:",
                      Object {
                        "Ref": "metaflowdatabasemetaflowrdssecret6A9B657C",
                      },
                      ":SecretString:password::}}",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MF_METADATA_DB_NAME",
                "Value": "metaflow",
              },
            ],
            "Essential": true,
            "Image": "netflixoss/metaflow_metadata_service",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "metaflowecsloggroupEC292114",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "metadata-service-v2",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "HostPort": 8080,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 8082,
                "HostPort": 8082,
                "Protocol": "tcp",
              },
            ],
          },
          Object {
            "EntryPoint": Array [
              "/usr/bin/xray",
              "-b",
              "127.0.0.1:2000",
              "-l",
              "dev",
              "-o",
            ],
            "Environment": Array [
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
            ],
            "Essential": true,
            "Image": "amazon/aws-xray-daemon",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "metaflowecsloggroupEC292114",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "xray",
              },
            },
            "MemoryReservation": 256,
            "Name": "xray",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "HostPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "metaflowecsexecutionroleD3FB200A",
            "Arn",
          ],
        },
        "Family": "metadata-service-v2",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "metaflowecstaskroleA7C0B7A2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "metaflowfargateservicenlbtargetgroupBF36844D": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckProtocol": "TCP",
        "HealthCheckTimeoutSeconds": 10,
        "HealthyThresholdCount": 2,
        "Port": 8080,
        "Protocol": "TCP",
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "metaflowlambdaecsexecutionroleB10ADD8A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "RoleName": "integ-ec2LambdaEcsExecuteRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowlambdaecsexecutionroleDefaultPolicyE5237DF7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowlambdaecsexecutionroleDefaultPolicyE5237DF7",
        "Roles": Array [
          Object {
            "Ref": "metaflowlambdaecsexecutionroleB10ADD8A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowmetaflowcluster88F18226": Object {
      "Properties": Object {
        "CapacityProviders": Array [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": Object {
          "Ref": "metaflowmetaflowclusterB98B9F11",
        },
        "DefaultCapacityProviderStrategy": Array [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "metaflowmetaflowclusterB98B9F11": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "metaflowrdssgB8D4A7BB": Object {
      "Properties": Object {
        "GroupDescription": "integ-ec2/metaflow/rds-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "metaflowrdssgfromintegec2metaflowfargateserviceServiceSecurityGroup620135AF5432A0008A0E": Object {
      "Properties": Object {
        "Description": "allow connections from the service to the database",
        "FromPort": 5432,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "metaflowrdssgB8D4A7BB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "metaflowfargateserviceServiceSecurityGroup8618F514",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "metaflowtable406E5931": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pathspec",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pathspec",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TimeToLiveSpecification": Object {
          "AttributeName": "ttl",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowvpcBBAABAF6": Object {
      "Properties": Object {
        "CidrBlock": "10.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "metaflowvpcIGWCFA54344": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "metaflowvpcPublicSubnet1DefaultRoute4B440EDF": Object {
      "DependsOn": Array [
        "metaflowvpcVPCGWFC189D47",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "metaflowvpcIGWCFA54344",
        },
        "RouteTableId": Object {
          "Ref": "metaflowvpcPublicSubnet1RouteTable9211133C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "metaflowvpcPublicSubnet1RouteTable9211133C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "metaflowvpcPublicSubnet1RouteTableAssociation8AE5A4F3": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "metaflowvpcPublicSubnet1RouteTable9211133C",
        },
        "SubnetId": Object {
          "Ref": "metaflowvpcPublicSubnet1SubnetA193F830",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "metaflowvpcPublicSubnet1SubnetA193F830": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.20.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "metaflowvpcPublicSubnet2DefaultRouteFCE91CE5": Object {
      "DependsOn": Array [
        "metaflowvpcVPCGWFC189D47",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "metaflowvpcIGWCFA54344",
        },
        "RouteTableId": Object {
          "Ref": "metaflowvpcPublicSubnet2RouteTable1E2EE2BB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "metaflowvpcPublicSubnet2RouteTable1E2EE2BB": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "metaflowvpcPublicSubnet2RouteTableAssociationE423A357": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "metaflowvpcPublicSubnet2RouteTable1E2EE2BB",
        },
        "SubnetId": Object {
          "Ref": "metaflowvpcPublicSubnet2Subnet98001B3D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "metaflowvpcPublicSubnet2Subnet98001B3D": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.20.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "metaflowvpcVPCGWFC189D47": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "metaflowvpcIGWCFA54344",
        },
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;
