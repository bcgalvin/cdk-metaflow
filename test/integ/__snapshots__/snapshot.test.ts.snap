// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`metaflow-integ-stack 1`] = `
Object {
  "Outputs": Object {
    "metaflowapixrayTracerAPIEndpoint94733F1B": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "metaflowapixrayTracerAPI1D75E9CF",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "metaflowapixrayTracerAPIDeploymentStageapi023D9DD3",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363ArtifactHashC8CABE1D": Object {
      "Description": "Artifact hash for asset \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3Bucket6995F9C9": Object {
      "Description": "S3 bucket for asset \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
    "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823": Object {
      "Description": "S3 key for asset version \\"4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "metaflowapiapikeyB3A705E0": Object {
      "Properties": Object {
        "Enabled": true,
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-apiKey",
            ],
          ],
        },
        "StageKeys": Array [
          Object {
            "RestApiId": Object {
              "Ref": "metaflowapixrayTracerAPI1D75E9CF",
            },
            "StageName": Object {
              "Ref": "metaflowapixrayTracerAPIDeploymentStageapi023D9DD3",
            },
          },
        ],
      },
      "Type": "AWS::ApiGateway::ApiKey",
    },
    "metaflowapiapilogs4443C2B1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-api",
            ],
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowapidbmigratehandler168BC7AA": Object {
      "DependsOn": Array [
        "metaflowlambdaecsexecutionroleDefaultPolicyE5237DF7",
        "metaflowlambdaecsexecutionroleB10ADD8A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3Bucket6995F9C9",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4b4283ac3a59156d9fee54d373861ada81aeb137f07ff9ab9ba563fb0cfb9363S3VersionKeyEED18823",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "MD_LB_ADDRESS": "placeholder",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "metaflowlambdaecsexecutionroleB10ADD8A",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "metaflowvpcBBAABAF6",
                "DefaultSecurityGroup",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "metaflowvpcPublicSubnet1SubnetA193F830",
            },
            Object {
              "Ref": "metaflowvpcPublicSubnet2Subnet98001B3D",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "metaflowapixrayTracerAPI1D75E9CF": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "xrayTracerAPI",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "metaflowapixrayTracerAPIAccount36424FD4": Object {
      "DependsOn": Array [
        "metaflowapixrayTracerAPI1D75E9CF",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "metaflowapixrayTracerAPICloudWatchRole0278628D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "metaflowapixrayTracerAPICloudWatchRole0278628D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowapixrayTracerAPIDeployment46F1C229ed97cabd1cea78786e9d2567a313206f": Object {
      "DependsOn": Array [
        "metaflowapixrayTracerAPIdbschemastatusGET24390F3C",
        "metaflowapixrayTracerAPIdbschemastatus0882A054",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "metaflowapixrayTracerAPI1D75E9CF",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "metaflowapixrayTracerAPIDeploymentStageapi023D9DD3": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "metaflowapiapilogs4443C2B1",
              "Arn",
            ],
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \\"$context.httpMethod $context.resourcePath $context.protocol\\" $context.status $context.responseLength $context.requestId",
        },
        "DeploymentId": Object {
          "Ref": "metaflowapixrayTracerAPIDeployment46F1C229ed97cabd1cea78786e9d2567a313206f",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "metaflowapixrayTracerAPI1D75E9CF",
        },
        "StageName": "api",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "metaflowapixrayTracerAPIdbschemastatus0882A054": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "metaflowapixrayTracerAPI1D75E9CF",
            "RootResourceId",
          ],
        },
        "PathPart": "db_schema_status",
        "RestApiId": Object {
          "Ref": "metaflowapixrayTracerAPI1D75E9CF",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "metaflowapixrayTracerAPIdbschemastatusGET24390F3C": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "metaflowapidbmigratehandler168BC7AA",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "metaflowapixrayTracerAPIdbschemastatus0882A054",
        },
        "RestApiId": Object {
          "Ref": "metaflowapixrayTracerAPI1D75E9CF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "metaflowapixrayTracerAPIdbschemastatusGETApiPermissionTestintegec2metaflowapixrayTracerAPIFFFD2EB0GETdbschemastatus215E3EC3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "metaflowapidbmigratehandler168BC7AA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "metaflowapixrayTracerAPI1D75E9CF",
              },
              "/test-invoke-stage/GET/db_schema_status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "metaflowapixrayTracerAPIdbschemastatusGETApiPermissionintegec2metaflowapixrayTracerAPIFFFD2EB0GETdbschemastatusA825529E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "metaflowapidbmigratehandler168BC7AA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "metaflowapixrayTracerAPI1D75E9CF",
              },
              "/",
              Object {
                "Ref": "metaflowapixrayTracerAPIDeploymentStageapi023D9DD3",
              },
              "/GET/db_schema_status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "metaflowbucket78CC888C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowbucketPolicy2EE154E6": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "metaflowbucket78CC888C",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "StringNotEquals": Object {
                  "s3:authType": "REST-HEADER",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    Object {
                      "Ref": "metaflowbucket78CC888C",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "metaflowcatalogappprodusageplanDF0FF455": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "metaflowapixrayTracerAPI1D75E9CF",
            },
            "Stage": Object {
              "Ref": "metaflowapixrayTracerAPIDeploymentStageapi023D9DD3",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "metaflowcatalogappprodusageplanUsagePlanKeyResourceFBA72DB0": Object {
      "Properties": Object {
        "KeyId": Object {
          "Ref": "metaflowapiapikeyB3A705E0",
        },
        "KeyType": "API_KEY",
        "UsagePlanId": Object {
          "Ref": "metaflowcatalogappprodusageplanDF0FF455",
        },
      },
      "Type": "AWS::ApiGateway::UsagePlanKey",
    },
    "metaflowdatabaseDBInstance227685BC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AllocatedStorage": "100",
        "BackupRetentionPeriod": 7,
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t2.small",
        "DBParameterGroupName": "default.postgres12",
        "DBSubnetGroupName": Object {
          "Ref": "metaflowdatabaseDBInstanceSubnetGroupE0E2AAC3",
        },
        "DeletionProtection": false,
        "Engine": "postgres",
        "EngineVersion": "12.4",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "metaflowdatabasemetaflowrdssecret6A9B657C",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "metaflowdatabasemetaflowrdssecret6A9B657C",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "metaflowrdssgB8D4A7BB",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowdatabaseDBInstanceSubnetGroupE0E2AAC3": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for DBInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "metaflowvpcPublicSubnet1SubnetA193F830",
          },
          Object {
            "Ref": "metaflowvpcPublicSubnet2Subnet98001B3D",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "metaflowdatabasemetaflowrdssecret6A9B657C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "This is a Secrets Manager secret for an RDS DB instance",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "IncludeSpace": false,
          "SecretStringTemplate": "{\\"username\\":\\"master\\"}",
        },
        "Name": "metaflow-rds-secret",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowdatabasemetaflowrdssecretAttachment571407D1": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "metaflowdatabasemetaflowrdssecret6A9B657C",
        },
        "TargetId": Object {
          "Ref": "metaflowdatabaseDBInstance227685BC",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "metaflowecsexecutionroleD3FB200A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "integ-ec2EcsExecutionRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowecsexecutionroleDefaultPolicy6F2C4940": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowecsexecutionroleDefaultPolicy6F2C4940",
        "Roles": Array [
          Object {
            "Ref": "metaflowecsexecutionroleD3FB200A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowecstaskroleA7C0B7A2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "RoleName": "integ-ec2-EcsTaskRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowecstaskroleDefaultPolicy6DEED8E7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "metaflowbucket78CC888C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "metaflowbucket78CC888C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowecstaskroleDefaultPolicy6DEED8E7",
        "Roles": Array [
          Object {
            "Ref": "metaflowecstaskroleA7C0B7A2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowfargatesg0EDB4A20": Object {
      "Properties": Object {
        "GroupDescription": "integ-ec2/metaflow/fargate-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "metaflowvpcBBAABAF6",
                "CidrBlock",
              ],
            },
            "Description": "Allow API Calls Internally",
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080,
          },
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "metaflowvpcBBAABAF6",
                "CidrBlock",
              ],
            },
            "Description": "Allow API Calls Internally",
            "FromPort": 8082,
            "IpProtocol": "tcp",
            "ToPort": 8082,
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "metaflowfargatesgfromintegec2metaflowfargatesgADB1896AALLTRAFFIC3E13B2D9": Object {
      "Properties": Object {
        "Description": "Internal Communication",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "metaflowfargatesg0EDB4A20",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "metaflowfargatesg0EDB4A20",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "metaflowlambdaecsexecutionroleB10ADD8A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "RoleName": "integ-ec2LambdaEcsExecuteRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowlambdaecsexecutionroleDefaultPolicyE5237DF7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowlambdaecsexecutionroleDefaultPolicyE5237DF7",
        "Roles": Array [
          Object {
            "Ref": "metaflowlambdaecsexecutionroleB10ADD8A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowrdssgB8D4A7BB": Object {
      "Properties": Object {
        "GroupDescription": "integ-ec2/metaflow/rds-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "metaflowrdssgfromintegec2metaflowfargatesgADB1896A54322E03D546": Object {
      "Properties": Object {
        "Description": "from integec2metaflowfargatesgADB1896A:5432",
        "FromPort": 5432,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "metaflowrdssgB8D4A7BB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "metaflowfargatesg0EDB4A20",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "metaflowtable406E5931": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pathspec",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pathspec",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TimeToLiveSpecification": Object {
          "AttributeName": "ttl",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowvpcBBAABAF6": Object {
      "Properties": Object {
        "CidrBlock": "10.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "metaflowvpcIGWCFA54344": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "metaflowvpcPublicSubnet1DefaultRoute4B440EDF": Object {
      "DependsOn": Array [
        "metaflowvpcVPCGWFC189D47",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "metaflowvpcIGWCFA54344",
        },
        "RouteTableId": Object {
          "Ref": "metaflowvpcPublicSubnet1RouteTable9211133C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "metaflowvpcPublicSubnet1RouteTable9211133C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "metaflowvpcPublicSubnet1RouteTableAssociation8AE5A4F3": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "metaflowvpcPublicSubnet1RouteTable9211133C",
        },
        "SubnetId": Object {
          "Ref": "metaflowvpcPublicSubnet1SubnetA193F830",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "metaflowvpcPublicSubnet1SubnetA193F830": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.20.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "metaflowvpcPublicSubnet2DefaultRouteFCE91CE5": Object {
      "DependsOn": Array [
        "metaflowvpcVPCGWFC189D47",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "metaflowvpcIGWCFA54344",
        },
        "RouteTableId": Object {
          "Ref": "metaflowvpcPublicSubnet2RouteTable1E2EE2BB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "metaflowvpcPublicSubnet2RouteTable1E2EE2BB": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "metaflowvpcPublicSubnet2RouteTableAssociationE423A357": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "metaflowvpcPublicSubnet2RouteTable1E2EE2BB",
        },
        "SubnetId": Object {
          "Ref": "metaflowvpcPublicSubnet2Subnet98001B3D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "metaflowvpcPublicSubnet2Subnet98001B3D": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.20.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-ec2/metaflow/vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "metaflowvpcVPCGWFC189D47": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "metaflowvpcIGWCFA54344",
        },
        "VpcId": Object {
          "Ref": "metaflowvpcBBAABAF6",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;
